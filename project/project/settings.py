"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='*' , cast=Csv())


CRISPY_TEMPLATE_PACK = 'bootstrap5' 
STATIC_ROOT = BASE_DIR / "staticfiles"


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('DJANGO_SECRET_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', default=True, cast=bool)

AUTH_USER_MODEL = 'mi_blog.User' 

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Application definition

INSTALLED_APPS = [
    'taggit',
    'tailwind',
    'friends.apps.FriendsConfig',
    'mi_blog.apps.MiBlogConfig',
    'notifications.apps.NotificationsConfig',
    'mi_blog_theme', 
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.sites',  # Necesario para allauth
    'django.contrib.sitemaps',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    # 'chat',
    'axes',
]

TAILWIND_APP_NAME = 'mi_blog_theme' 

# Configuración de seguridad
AXES_FAILURE_LIMIT = 5  # Número de intentos fallidos permitidos
AXES_COOLOFF_TIME = 1  # Tiempo de bloqueo en horas
AXES_LOCKOUT_URL = '/account/locked/'  # URL donde redirigir cuando se bloquea un usuario


SOCIALACCOUNT_LOGIN_ON_GET = True


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Middleware de allauth
    'allauth.account.middleware.AccountMiddleware',
    
    # Middleware de axes
    'axes.middleware.AxesMiddleware',
    

]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Este directorio debe existir
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'notifications.context_proccesor.add_post_urls',
                'notifications.context_proccesor.image_user',
                
            ],
        },
    },
]


WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(default=config('DATABASE_URL'), conn_max_age=600, ssl_require=True)
}




# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
 
# Habilitar el inicio de sesión con redes sociales
AUTHENTICATION_BACKENDS = (
    'allauth.account.auth_backends.AuthenticationBackend',  # Backend de allauth
    'axes.backends.AxesStandaloneBackend',  # Backend de django-axes
    'django.contrib.auth.backends.ModelBackend',  # Backend predeterminado de Django
)

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': config('GOOGLE_CLIENT_ID'),
            'secret': config('GOOGLE_CLIENT_SECRET'),
        }
    }
}

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"  # o "optional", dependiendo de tu preferencia
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_EMAIL_VERIFICATION = "mandatory"  # o "optional", dependiendo de tu preferencia

ACCOUNT_LOGIN_ON_START = False
LOGIN_URL = '/blog/accounts/login/'
LOGIN_REDIRECT_URL = '/blog/'  # URL a la que se redirige después de iniciar sesión
LOGOUT_REDIRECT_URL = '/accounts/login/'  # URL a la que se redirige después de cerrar sesión

# Configura el sitio
SITE_ID = 1

# COOKIES
CSRF_COOKIE_SECURE = True  # Asegura que la cookie CSRF solo se envíe a través de HTTPS
CSRF_COOKIE_HTTPONLY = True # Hace que la cookie no sea accesible a través de JavaScript
SESSION_COOKIE_SECURE = True  # Asegura que la cookie de sesión solo se envíe a través de HTTPS
SESSION_COOKIE_HTTPONLY = True  # Hace que la cookie de sesión no sea accesible a través de JavaScript

CSRF_TRUSTED_ORIGINS = [
    'https://cheraiplus.onrender.com',
]



# Redirect Security
SECURE_SSL_REDIRECT = True  # Redirige automáticamente HTTP a HTTPS
SECURE_HSTS_SECONDS = 3000000  # Asegura que los navegadores solo usen HTTPS por 1 año
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Aplica la política HSTS a todos los subdominios
SECURE_HSTS_PRELOAD = True # Permite que tu dominio se añada a la lista de dominios pre-cargados HSTS

# Filtro de info sensible (errores)
ADMINS = [('Xhector', 'hectorraul16romero@gmail.com')]  # Para recibir alertas sobre errores
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    },
}


